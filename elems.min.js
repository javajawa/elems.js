/*!
 * SPDX-FileCopyrightText: 2020 Benedict Harcourt
 *
 * SPDX-License-Identifier: BSD-2-Clause
 */'use strict';export function elemGenerator(a,b){return(...c)=>{const d=b?document.createElementNS(b,a):document.createElement(a);return c=c instanceof Array?c.flat(3):[c],c.forEach(b=>{if(null!==b)if(b instanceof Attr)d.setAttribute(b.name,b.value);else if(b instanceof Node)d.appendChild(b);else if("string"==typeof b)d.appendChild(document.createTextNode(b));else if("object"==typeof b)Object.keys(b).forEach(c=>{if("function"==typeof b[c])d.addEventListener(c,b[c]);else if(!0===b[c])d.setAttribute(c,"");else if(!1===b[c])d.removeAttribute(c);else{if(null===b[c])return;if("object"!=typeof b[c])d.setAttribute(c,b[c]);else throw`Invalid type for attribute ${c} in element ${a}`}});else throw`Invalid type in arguments for element ${a}, arg was ${typeof b}: ${b}`}),d}}export function elemRegister(a,b,...c){c.forEach(c=>window[a+c]=elemGenerator(c,b))}export function documentFragment(...a){const b=new DocumentFragment;return a=a instanceof Array?a.flat(3):[a],a.forEach(a=>b.appendChild(a)),b}